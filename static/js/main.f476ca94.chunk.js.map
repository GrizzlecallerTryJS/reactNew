{"version":3,"sources":["../node_modules/typescript/lib sync","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Login/Login.module.css","components/Friends/Friends.module.css","components/Dialogs/MessageItem/MessageItem.module.css","components/Navbar/Navbar.module.css","components/Navbar/NavbarItems/NavbarItems.module.css","assets/loaders/Preloader/Preloader.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","serviceWorker.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","assets/FormsControls/FormsControls.js","utils/validators/Validators.js","components/Login/LoginForm.jsx","api/api.js","redux/Auth-Reducer.js","components/Login/Login.jsx","components/Friends/Friends.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/DialogsForm/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","redux/Message-Reducer.js","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","components/Navbar/NavbarItems/NavbarItems.jsx","components/Navbar/Navbar.jsx","redux/NavBar-Reducer.js","components/Navbar/NavbarContainer.jsx","redux/Users-Reducer.js","assets/Paginator/Paginator.jsx","components/Users/UserItem/UserItem.jsx","components/Users/Users.jsx","assets/loaders/Preloader/Preloader.jsx","components/Users/UsersContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHoocs.jsx","components/Profile/ProfileInfo/ProfileStatusComponent.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsForm/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/Post-Reducer.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","redux/Profile-Reducer.js","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/Header-Reducer.js","components/Header/HeaderContainer.jsx","redux/App-Reducer.js","redux/redux-store.js","App.js","index.js","assets/defaultImage.jpg","components/Users/UserItem/UserItem.module.css","assets/FormsControls/FormsControls.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Boolean","window","location","hostname","match","News","className","styles","news_main","Music","music_main","Settings","settings_main","FormControl","Element","input","type","meta","touched","error","props","hasError","formControl","placeholder","name","SingleTextArea","Input","Checkbox","Password","creatorForField","component","validators","htmlFor","charAt","toUpperCase","slice","Field","validate","required","value","undefined","maxLengthCreator","maxLength","length","minLengthCreator","minLength","maxLength30","minLength1","LoginForm","onSubmit","handleSubmit","formSummaty","instance","axios","baseURL","withCredentials","headers","usersAPI","page","pageSize","get","then","response","data","userId","post","delete","profileAPI","status","put","authAPI","email","password","rememberMe","initState","login","isFetching","isAuth","authUserImage","setAuthUserData","payload","setAuthUserImage","setIsFetching","getAuthUserData","dispatch","a","resultCode","getAuth","createSelector","state","forAuth","getAuthId","getAuthLogin","getAuthUserImage","authReducer","action","stateCopy","_setAuthUserData","_setIsFetching","_setAuthUserImage","LoginReduxForm","reduxForm","form","mdtp","authLoginUser","errorMessage","messages","stopSubmit","_error","connect","to","login_main","formData","Friends","friends_main","DialogItem","dialog","dialog_avatar_image","src","avatar","alt","MessageItem","message","messageText","maxLength10","DialogsForm","DialogReduxForm","Dialogs","addMessage","values","dialogField","nextProps","nextState","this","console","log","NameMassive","forDialogs","dialogsData","map","key","MessageMassive","messagesData","text","dialogs_main","dialogs_items","dialogs_messages","React","Component","initialState","getDialogs","dialogs","messageReducer","_addMessage","last","newMessage","push","withAuthRedirect","dialogsContainer","compose","addMessageAC","NavbarItems","item","path","article","Navbar","navbarItems","navbarData","n","getNavbarData","forNavbar","navBarReducer","users","totalUsersCount","defaultPage","followingProgressState","itemsForPaginator","componentReadyToMount","actionPage","setRequestedPage","pageNumber","followingProgress","requestUsersPage","items","totalCount","getUsersOnPage","forUsers","getPageSize","getTotalUsersCount","getActionPage","getFetching","getFollowingProgressState","getItemsForPaginator","getComponentReadyToMountState","usersReducer","_followButton","u","user","followed","_setUsers","newUsers","_setRequestedPage","_setTotalUsersCount","_followingProgress","filter","_componentReadyToMount","success","READY_TO_MOUNT","Paginator","useState","currentCount","setCurrentCount","rowsForMassive","Math","ceil","pagesCount","tenPagesMassive","currentPaginatorMassive","rows","tmp","i","tmpMassive","j","create2DArray","pages","p","requestedPage","selectedPage","onClick","onPageChanged","UserItem","followUnfollow","userItem_global","userItem_avatar_image","defaultImage","userItem_name_area","userItem_status_area","aboutMe","userItem_followButton_area","disabled","some","Users","photos","small","users_global","Preloader","lds_hourglass","UsersAPIComponent","readyToMount","UsersCaller","mapDispatchToProps","userID","apiMethod","usersPage","Promise","all","ProfileStatusWithHoocs","memo","editMode","setEditMode","localStatus","setLocalStatus","useEffect","activateEditMode","deactivateEditMode","updateUserStatus","onStateUpdate","element","target","onChange","autoFocus","onBlur","onDoubleClick","ProfileInfo","userData","fullName","defaultStatus","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Post","likeButtonCounter","post_global","post_avatar_image","post_sugar","likeCount","liked","MyPostsForm","label","MyPostsFormRedux","MyPosts","postData","addPost","postField","PostMap","text_area","posts","getPostData","forPosts","postReducer","_addPost","postMessage","newPost","_likeButtonCounter","_deletePost","postId","Profile","MyPostsContainer","lookingForAJob","lookingForAJobDescription","large","allUserDataState","setCommonUserProfile","userProfile","setUserStatus","getUserData","forProfile","getStatus","getIsFetching","fetching","getAllUserDataState","profileReducer","_setCommonUserProfile","_isFetching","_setUserStatus","_getAllUserDataSuccess","ProfileContainer","params","authorizedUserId","history","getAllUserData","ProfileCaller","getUserProfile","userStatus","getUserStatus","profileContainer","withRouter","Header","header","login_block","authLogoutUser","headerReducer","HeaderContainer","getHeader","HeaderCaller","response1","initialized","appReducer","_setInitialized","init","reducers","combineReducers","formReducer","forHeder","forApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","App","initializeApp","NavbarCaller","NavbarContainer","exact","DialogsContainer","UsersContainer","Login","AppContainer","promise","MainApp","basename","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f476ca94.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 126;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news_main\":\"News_news_main__kDrvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music_main\":\"Music_music_main__3M9oF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_main\":\"Settings_settings_main__2AoLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_main\":\"Login_login_main__ubNY1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends_main\":\"Friends_friends_main__xInTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessageItem_message__X7Otp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navbar_item__zmMk4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavbarItems_item__1T7HY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_hourglass\":\"Preloader_lds_hourglass__s6QAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__3xuFq\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styles from './News.module.css';\n\nconst News = () => {\n  return <div className={styles.news_main}>News</div>;\n};\n\nexport default News;\n","import React from 'react';\nimport styles from './Music.module.css';\n\nconst Music = () => {\n  return <div className={styles.music_main}>Music</div>;\n};\n\nexport default Music;\n","import React from 'react';\nimport styles from './Settings.module.css';\n\nconst Settings = () => {\n  return <div className={styles.settings_main}>Settings</div>;\n};\n\nexport default Settings;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport styles from './FormsControls.module.css';\n\nconst FormControl = ({ Element, input, type, meta: { touched, error }, props }) => {\n  const hasError = touched && error;\n  return (\n    <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\n      <div>\n        <Element {...input} {...props} type={type} placeholder={input.name} />\n      </div>\n      <div>{hasError && <span>{error}</span>}</div>\n    </div>\n  );\n};\n\nexport const SingleTextArea = (props) => {\n  return <FormControl {...props} Element={'textarea'} type={'input'} />;\n};\n\nexport const Input = (props) => {\n  return <FormControl {...props} Element={'input'} type={'input'} />;\n};\n\nexport const Checkbox = (props) => {\n  return <FormControl {...props} Element={'Input'} type={'checkbox'} />;\n};\n\nexport const Password = (props) => {\n  return <FormControl {...props} Element={'Input'} type={'password'} />;\n};\n\nexport const creatorForField = (name, component, validators = []) => {\n  return (\n    <div>\n      <label htmlFor={name}>{name.charAt(0).toUpperCase() + name.slice(1)}</label>\n      <Field\n        name={name}\n        component={component}\n        validate={[\n          ...validators,\n        ]}\n        placeholder={name}\n      />\n    </div>\n  );\n};\n","export const required = (value) => {\n  return value ? undefined : 'Field is required';\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  return value && value.length <= maxLength ? undefined : `Max length ${maxLength} symbols`;\n};\n\nexport const minLengthCreator = (minLength) => (value) => {\n  return (value && value.length) >= minLength ? undefined : `Min length ${minLength} symbols`;\n};\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport { Input, Checkbox, Password, creatorForField } from './../../assets/FormsControls/FormsControls';\nimport { required, maxLengthCreator, minLengthCreator } from '../../utils/validators/Validators';\nimport styles from './../../assets/FormsControls/FormsControls.module.css';\n\nconst maxLength30 = maxLengthCreator(30);\nconst minLength1 = minLengthCreator(1);\n\nconst LoginForm = (props) => {\n  const errorTrue = () => {\n    return (\n      <div className={styles.formSummaty}>\n        <span>{props.error}</span>\n      </div>\n    );\n  };\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      {creatorForField('email', Input, [\n        required,\n        maxLength30,\n        minLength1,\n      ])}\n      {creatorForField('password', Password, [\n        required,\n        maxLength30,\n        minLength1,\n      ])}\n      {creatorForField('rememberMe', Checkbox)}\n      <div>{props.error && errorTrue()}</div>\n      <div>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import * as axios from 'axios';\n\nconst instance = axios.create({\n  baseURL         : 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials : true,\n  headers         : {\n    'API-KEY' : 'a57a0a64-780f-4014-88c0-5c80c079bab6',\n  },\n});\n\nexport const usersAPI = {\n  getUsers (page = 1, pageSize = 10) {\n    return instance.get(`users?page=${page}&count=${pageSize}`).then((response) => {\n      return response.data;\n    });\n  },\n\n  followUser (userId) {\n    return instance.post(`follow/${userId}`, null).then((response) => {\n      return response.data;\n    });\n  },\n  unFollowUser (userId) {\n    return instance.delete(`follow/${userId}`, null).then((response) => {\n      return response.data;\n    });\n  },\n};\n\nexport const profileAPI = {\n  getUserProfile (userId) {\n    return instance.get(`profile/${userId}`).then((response) => {\n      return response.data;\n    });\n  },\n  getUserStatus (userId) {\n    return instance.get(`profile/status/${userId}`).then((response) => {\n      return response.data;\n    });\n  },\n  updateStatus (status) {\n    return instance.put(`profile/status`, { status: status });\n  },\n};\n\nexport const authAPI = {\n  getAuthMe () {\n    return instance.get(`auth/me`).then((response) => {\n      return response.data;\n    });\n  },\n  authLogin (email, password, rememberMe = false) {\n    return instance.post(`auth/login`, { email, password, rememberMe }).then((response) => {\n      return response.data;\n    });\n  },\n  authLogout () {\n    return instance.delete(`auth/login`).then((response) => {\n      return response.data;\n    });\n  },\n};\n","import { authAPI } from '../api/api';\nimport { stopSubmit } from 'redux-form';\nimport { createSelector } from 'reselect';\n\nconst SET_USER_DATA = 'SET-USER-DATA';\nconst SET_IS_FETCHING = 'SET-IS-FETCHING';\nconst SET_AUTH_USER_IMAGE = 'SET-AUTH-USER-IMAGE';\n\nlet initState = {\n  id            : null,\n  email         : null,\n  login         : null,\n  isFetching    : true,\n  isAuth        : false,\n  authUserImage : null,\n};\n\nconst authReducer = (state = initState, action) => {\n  let stateCopy = state;\n\n  let _setAuthUserData = (payload) => {\n    stateCopy = {\n      ...payload,\n    };\n  };\n\n  let _setIsFetching = (isFetching) => {\n    stateCopy = {\n      ...state,\n      isFetching : isFetching,\n    };\n  };\n\n  let _setAuthUserImage = (authUserImage) => {\n    stateCopy = {\n      ...state,\n      authUserImage : authUserImage,\n    };\n  };\n\n  if (action.type === SET_USER_DATA) {\n    _setAuthUserData(action.payload);\n  } else if (action.type === SET_IS_FETCHING) {\n    _setIsFetching(action.isFetching);\n  } else if (action.type === SET_AUTH_USER_IMAGE) {\n    _setAuthUserImage(action.authUserImage);\n  }\n\n  return stateCopy;\n};\n\n/* Action creators */\n\nexport const setAuthUserData = (id, login, email, isAuth) => {\n  return {\n    type    : SET_USER_DATA,\n    payload : {\n      id,\n      login,\n      email,\n      isAuth,\n    },\n  };\n};\n\nexport const setAuthUserImage = (authUserImage) => {\n  return {\n    type          : SET_AUTH_USER_IMAGE,\n    authUserImage : authUserImage,\n  };\n};\n\nexport const setIsFetching = (isFetching) => {\n  return {\n    type       : SET_IS_FETCHING,\n    isFetching : isFetching,\n  };\n};\n\n/* Thunk creators */\n\n/* export const getAuthUserData = () => (dispatch) => {\n  dispatch(setIsFetching(true));\n  return authAPI.getAuthMe().then((data) => {\n    if (data.resultCode === 0) {\n      dispatch(setIsFetching(false));\n      let { id, login, email } = data.data;\n      dispatch(setAuthUserData(id, login, email, true));\n    }\n  });\n}; */\n\nexport const getAuthUserData = () => async (dispatch) => {\n  dispatch(setIsFetching(true));\n  let response = await authAPI.getAuthMe();\n  if (response.resultCode === 0) {\n    dispatch(setIsFetching(false));\n    let { id, login, email } = response.data;\n    dispatch(setAuthUserData(id, login, email, true));\n  }\n};\n\nexport const authLoginUser = (email, password, rememberMe = false) => async (dispatch) => {\n  dispatch(setIsFetching(true));\n  let response = await authAPI.authLogin(email, password, rememberMe);\n  if (response.resultCode === 0) {\n    dispatch(setIsFetching(false));\n    dispatch(getAuthUserData());\n  } else {\n    let errorMessage = response.messages.length > 0 ? response.messages[0] : 'Something Wrong';\n    dispatch(stopSubmit('loginForm', { _error: errorMessage }));\n  }\n};\n\nexport const authLogoutUser = () => async (dispatch) => {\n  dispatch(setIsFetching(true));\n  let response = await authAPI.authLogout();\n  if (response.resultCode === 0) {\n    dispatch(setIsFetching(false));\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\n\n/* Getters */\n\nconst _getAuth = (state) => {\n  return state.forAuth.isAuth;\n};\n\nconst _getAuthId = (state) => {\n  return state.forAuth.id;\n};\n\nconst _getAuthLogin = (state) => {\n  return state.forAuth.login;\n};\n\nconst _getAuthUserImage = (state) => {\n  return state.forAuth.authUserImage;\n};\n\nexport const getAuth = createSelector(_getAuth, (isAuth) => isAuth);\nexport const getAuthId = createSelector(_getAuthId, (id) => id);\nexport const getAuthLogin = createSelector(_getAuthLogin, (login) => login);\nexport const getAuthUserImage = createSelector(_getAuthUserImage, (authUserImage) => authUserImage);\n\nexport default authReducer;\n","import React from 'react';\nimport styles from './Login.module.css';\nimport LoginForm from './LoginForm';\nimport { reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { authLoginUser } from './../../redux/Auth-Reducer';\nimport { Redirect } from 'react-router-dom';\n\nlet LoginReduxForm = reduxForm({ form: 'loginForm' })(LoginForm);\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.authLoginUser(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return <Redirect to={`/profile/${props.userId}`} />;\n  }\n\n  return (\n    <div>\n      <div className={styles.login_main}>Login Form</div>\n      <p />\n      <div>\n        <LoginReduxForm onSubmit={onSubmit} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth : state.forAuth.isAuth,\n    userId : state.forAuth.id,\n  };\n};\n\nconst mdtp = {\n  authLoginUser,\n};\n\nexport default connect(mapStateToProps, mdtp)(Login);\n","import React from 'react';\nimport styles from './Friends.module.css';\n\nconst Friends = (props) => {\n  return <div className={styles.friends_main}>There is be Friends!!</div>;\n};\n\nexport default Friends;\n","import React from 'react';\nimport styles from './DialogItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  const path = '/messages/';\n\n  return (\n    <div className={styles.dialog}>\n      <div className={styles.dialog_avatar_image}>\n        <img src={props.avatar} alt='avatar' />\n        <NavLink to={`${path}${props.id}`}>{props.name}</NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from 'react';\nimport styles from './MessageItem.module.css';\n\nconst MessageItem = (props) => {\n  return <div className={styles.message}>{props.messageText}</div>;\n};\n\nexport default MessageItem;\n","import React from 'react';\nimport styles from './DialogsForm.module.css';\nimport { Field } from 'redux-form';\nimport { SingleTextArea } from '../../../assets/FormsControls/FormsControls';\nimport { required, maxLengthCreator, minLengthCreator } from '../../../utils/validators/Validators';\n\nconst maxLength10 = maxLengthCreator(10);\nconst minLength1 = minLengthCreator(1);\n\nconst DialogsForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field\n            name={'dialogField'}\n            component={SingleTextArea}\n            validate={[\n              required,\n              maxLength10,\n              minLength1,\n            ]}\n          />\n          <button>add post</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default DialogsForm;\n","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport MessageItem from './MessageItem/MessageItem';\nimport DialogsForm from './DialogsForm/DialogsForm';\nimport { reduxForm } from 'redux-form';\n\nconst DialogReduxForm = reduxForm({ form: 'dialogForm' })(DialogsForm);\n\nclass Dialogs extends React.Component {\n  addMessage = (values) => {\n    this.props.addMessage(values.dialogField);\n  };\n\n  shouldComponentUpdate (nextProps, nextState) {\n    return nextProps !== this.props || nextState !== this.state;\n  }\n\n  render () {\n    console.log('RENDER');\n    console.log(this.props);\n\n    let NameMassive = this.props.forDialogs.dialogsData.map((dialog) => {\n      return <DialogItem id={dialog.id} name={dialog.name} key={dialog.id} avatar={dialog.avatar} />;\n    });\n\n    let MessageMassive = this.props.forDialogs.messagesData.map((message) => {\n      return <MessageItem id={message.id} key={message.id} messageText={message.text} />;\n    });\n    return (\n      <div className={styles.dialogs_main}>\n        <div className={styles.dialogs_items}>{NameMassive}</div>\n        <div className={styles.dialogs_messages}>\n          <div>{MessageMassive}</div>\n          <div>\n            <DialogReduxForm onSubmit={this.addMessage} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dialogs;\n","import { createSelector } from 'reselect';\n\nconst ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n  dialogsData  : [\n    {\n      id     : 1,\n      name   : 'Aaron',\n      avatar :\n        'https://png.pngtree.com/png-clipart/20190924/original/pngtree-business-man-avatar-social-responsibility-vector-png-image_4822946.jpg',\n    },\n    {\n      id     : 2,\n      name   : 'Bernard',\n      avatar :\n        'https://thumbs.dreamstime.com/z/man-mustache-male-avatar-cartoon-social-media-icon-isolated-flat-illustration-vector-graphic-76950613.jpg',\n    },\n    {\n      id     : 3,\n      name   : 'Christopher',\n      avatar :\n        'https://n1.nextpng.com/sticker-png/664/825/sticker-png-social-media-icons-avatar-male-man-female-face-facial-hair-facial-expression.png',\n    },\n    { id: 4, name: 'Dylan', avatar: 'https://www.colourbox.com/preview/22295197-avatar-man-icon.jpg' },\n  ],\n\n  messagesData : [\n    { id: 1, text: 'Sint duis nisi pariatur duis irure quis labore ut eiusmod in quis.' },\n    { id: 2, text: 'Do est occaecat elit elit in voluptate exercitation quis exercitation magna ea ullamco.' },\n    { id: 3, text: 'Laborum dolor anim Lorem ullamco veniam ad ea.' },\n    { id: 4, text: 'Ad elit ea id reprehenderit reprehenderit nisi culpa esse eiusmod ut.' },\n    { id: 5, text: 'Quis laboris irure ullamco dolore nostrud.' },\n    { id: 6, text: 'Eu dolor nulla esse fugiat ea non est consequat ad exercitation.' },\n    { id: 7, text: 'Est laboris sit elit magna veniam nostrud mollit duis minim.' },\n  ],\n};\n\nconst messageReducer = (state = initialState, action) => {\n  let stateCopy = state;\n\n  const _addMessage = (message) => {\n    stateCopy = {\n      ...state,\n      messagesData : [\n        ...state.messagesData,\n      ],\n    };\n\n    let last = stateCopy.messagesData.length - 1;\n    const newId = stateCopy.messagesData[last].id + 1;\n\n    let newMessage = {\n      id   : newId,\n      text : message,\n    };\n\n    stateCopy.messagesData.push(newMessage);\n  };\n\n  if (action.type === ADD_MESSAGE) {\n    _addMessage(action.message);\n  }\n  return stateCopy;\n};\n\nexport const addMessageAC = (message) => {\n  return { type: ADD_MESSAGE, message: message };\n};\n\nconst _getDialogs = (state) => {\n  return state.forDialogs;\n};\n\nexport const getDialogs = createSelector(_getDialogs, (dialogs) => dialogs);\n\nexport default messageReducer;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForHOC = (state) => {\n  return {\n    isAuth: state.forAuth.isAuth,\n  };\n};\n\n// Эта функция принимает компонент...\nfunction withAuthRedirect(WrappedComponent) {\n  // ...и возвращает другой компонент...\n  class RedirectComponent extends React.Component {\n    /* constructor (props) {\n      super(props);\n    } */\n\n    render() {\n      let authState = this.props.isAuth;\n      return authState ? (\n        <WrappedComponent {...this.props} />\n      ) : (\n        <Redirect to={\"/login\"} />\n      );\n    }\n  }\n  RedirectComponent.displayName = `RedirectComponent(${getDisplayName(\n    WrappedComponent\n  )})`;\n  return connect(mapStateToPropsForHOC)(RedirectComponent);\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n}\n\nexport default withAuthRedirect;\n","import Dialogs from './Dialogs';\nimport { addMessageAC, getDialogs } from '../../redux/Message-Reducer';\nimport { connect } from 'react-redux';\nimport withAuthRedirect from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    forDialogs : getDialogs(state),\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage : (message) => {\n      dispatch(addMessageAC(message));\n    },\n  };\n};\n\nlet dialogsContainer = compose(connect(mapStateToProps, mapDispatchToProps))(Dialogs);\n\nexport default dialogsContainer;\n","import React from 'react';\nimport styles from './NavbarItems.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst NavbarItems = (props) => {\n  return (\n    <div>\n      <div className={styles.item}>\n        <NavLink to={props.path}>{props.article}</NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default NavbarItems;\n","import React from 'react';\nimport styles from './Navbar.module.css';\nimport NavbarItems from './NavbarItems/NavbarItems';\n\nclass Navbar extends React.Component {\n  // конструктор закоменчен, только потому что его не обязательно писать, т.к.\n  // единственное его предназначение передавать пропсы в родительский класс\n  /* constructor (props) {\n    super(props);\n  } */\n\n  render () {\n    let navbarItems = this.props.navbarData.map((n) => {\n      return <NavbarItems path={n.path} article={n.article} key={n.id} />;\n    });\n    return <div className={styles.item}>{navbarItems}</div>;\n  }\n}\n\nexport default Navbar;\n","import { createSelector } from 'reselect';\n\nlet initialState = {\n  navbarData : [\n    { id: 1, article: 'Profile', path: '/profile' },\n    { id: 2, article: 'Messages', path: '/messages' },\n    { id: 3, article: 'News', path: '/news' },\n    { id: 4, article: 'Music', path: '/music' },\n    { id: 5, article: 'Settings', path: '/settings' },\n    { id: 6, article: 'Friends', path: '/friends' },\n    { id: 7, article: 'Users', path: '/users' },\n  ],\n};\n\nconst navBarReducer = (state = initialState, action) => {\n  return state;\n};\n\n/* Getters */\n\nconst navbarData = (state) => {\n  return state.forNavbar.navbarData;\n};\n\nexport const getNavbarData = createSelector(navbarData, (data) => data);\n\nexport default navBarReducer;\n","import Navbar from './Navbar';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getNavbarData } from '../../redux/NavBar-Reducer';\n\n/* const NavbarContainer = (props) => {\n\n  return (\n    <StoreContext.Consumer>\n      {(store) => {\n        let stateForNavbar = store.getState().forNavbar.navbarData;\n        return <Navbar navbarData={stateForNavbar} />;\n      }}\n    </StoreContext.Consumer>\n  );\n}; */\n\nlet mapStateToProps = (state) => {\n  return {\n    navbarData : getNavbarData(state),\n  };\n};\n\n/* let mapDispatchToProps = () => {\n  return {};\n}; */\n\nlet mapDispatchToProps = {};\n\n//export default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Navbar);\n","import { usersAPI } from '../api/api';\n\nconst FOLLOW_BUTTON = 'FOLLOW-BUTTON';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst FOLLOWING_PROGRESS = 'FOLLOWING-PROGRESS';\nconst READY_TO_MOUNT = 'READY-TO-MOUNT';\n\nlet initState = {\n  users                  : [],\n  pageSize               : 8,\n  totalUsersCount        : 0,\n  defaultPage            : 1,\n  isFetching             : false,\n  followingProgressState : [],\n  itemsForPaginator      : 10,\n  componentReadyToMount  : false,\n  actionPage             : null,\n};\n\nconst usersReducer = (state = initState, action) => {\n  let stateCopy = state;\n\n  const _followButton = (id) => {\n    stateCopy = {\n      ...state,\n      users : state.users.map((u) => u),\n    };\n\n    stateCopy.users.map((user) => {\n      if (user.id === id && user.followed === false) {\n        return (user.followed = true);\n      } else if (user.id === id && user.followed === true) {\n        return (user.followed = false);\n      }\n    });\n  };\n\n  let _setUsers = (newUsers) => {\n    stateCopy = {\n      ...state,\n      users : newUsers,\n    };\n  };\n\n  let _setRequestedPage = (pageNumber) => {\n    stateCopy = { ...state, actionPage: pageNumber };\n  };\n\n  let _setTotalUsersCount = (totalCount) => {\n    stateCopy = { ...state, totalUsersCount: totalCount };\n  };\n\n  let _setIsFetching = (isFetching) => {\n    stateCopy = { ...state, isFetching: isFetching };\n  };\n\n  let _followingProgress = (isFetching, id) => {\n    stateCopy = {\n      ...state,\n      followingProgressState : isFetching\n        ? [\n            ...state.followingProgressState,\n            id,\n          ]\n        : [\n            ...state.followingProgressState.filter((id) => id !== action.userId),\n          ],\n    };\n  };\n\n  let _componentReadyToMount = (success) => {\n    stateCopy = {\n      ...state,\n      componentReadyToMount : success,\n    };\n  };\n\n  if (action.type === FOLLOW_BUTTON) {\n    _followButton(action.id);\n  } else if (action.type === SET_USERS) {\n    _setUsers(action.users);\n  } else if (action.type === SET_CURRENT_PAGE) {\n    _setRequestedPage(action.pageNumber);\n  } else if (action.type === SET_TOTAL_USERS_COUNT) {\n    _setTotalUsersCount(action.totalUsersCount);\n  } else if (action.type === TOGGLE_IS_FETCHING) {\n    _setIsFetching(action.isFetching);\n  } else if (action.type === FOLLOWING_PROGRESS) {\n    _followingProgress(action.isFetching, action.userId);\n  } else if (action.READY_TO_MOUNT) {\n    _componentReadyToMount(true);\n  }\n\n  return stateCopy;\n};\n\n/* Action creators */\n\nexport const followButton = (id) => {\n  return {\n    type : FOLLOW_BUTTON,\n    id   : id,\n  };\n};\n\nexport const setUsers = (newUsers) => {\n  return {\n    type  : SET_USERS,\n    users : newUsers,\n  };\n};\n\nexport const setRequestedPage = (pageNumber) => {\n  return {\n    type       : SET_CURRENT_PAGE,\n    pageNumber : pageNumber,\n  };\n};\n\nexport const setTotalUsersCount = (totalCount) => {\n  return {\n    type            : SET_TOTAL_USERS_COUNT,\n    totalUsersCount : totalCount,\n  };\n};\n\nexport const setIsFetching = (isFetching) => {\n  return {\n    type       : TOGGLE_IS_FETCHING,\n    isFetching : isFetching,\n  };\n};\n\nexport const followingProgress = (isFetching, userId) => {\n  return {\n    type       : FOLLOWING_PROGRESS,\n    isFetching : isFetching,\n    userId     : userId,\n  };\n};\n\nexport const componentReadyToMount = () => {\n  return {\n    type : READY_TO_MOUNT,\n  };\n};\n\n/* Action creators END */\n\n/* Thunk creators */\n\n/* export const requestUsers = (requestedPage, pageSize) => async (dispatch) => {\n  dispatch(setIsFetching(true));\n  dispatch(setRequestedPage(requestedPage));\n  let response = await usersAPI.getUsers(requestedPage, pageSize);\n  dispatch(setIsFetching(false));\n  dispatch(setUsers(response.items));\n  dispatch(setTotalUsersCount(response.totalCount));\n}; */\n\nexport const requestUsersPage = (pageNumber, pageSize) => async (dispatch) => {\n  dispatch(setRequestedPage(pageNumber));\n  dispatch(setIsFetching(true));\n  let response = await usersAPI.getUsers(pageNumber, pageSize);\n  dispatch(setIsFetching(false));\n  dispatch(setUsers(response.items));\n  dispatch(setTotalUsersCount(response.totalCount));\n};\n\n/* export const follow = (userID) => async (dispatch) => {\n  dispatch(followingProgress(true, userID));\n  let response = await usersAPI.followUser(userID);\n  if (response.resultCode === 0) {\n    dispatch(followButton(userID));\n    dispatch(followingProgress(false, userID));\n  }\n};\n\nexport const unFollow = (userID) => async (dispatch) => {\n  dispatch(followingProgress(true, userID));\n  let response = await usersAPI.unFollowUser(userID);\n  if (response.resultCode === 0) {\n    dispatch(followButton(userID));\n    dispatch(followingProgress(false, userID));\n  }\n}; */\n\nexport const followUnfollow = (userID, followed) => async (dispatch) => {\n  dispatch(followingProgress(true, userID));\n  let apiMethod;\n  followed ? (apiMethod = usersAPI.unFollowUser(userID)) : (apiMethod = usersAPI.followUser(userID));\n  let response = await apiMethod;\n  if (response.resultCode === 0) {\n    dispatch(followButton(userID));\n    dispatch(followingProgress(false, userID));\n  }\n};\n\nexport const readyToMount = (requestedPage, pageSize) => (dispatch) => {\n  /* let users = dispatch(requestUsers(requestedPage, pageSize)); */\n  let usersPage = dispatch(requestUsersPage(requestedPage, pageSize));\n  Promise.all([\n    /* users, */\n    usersPage,\n  ]).then(() => {\n    dispatch(componentReadyToMount());\n  });\n};\n\n/* Thunk creators  END */\n\n/* Getters */\n\nexport const getUsersOnPage = (state) => {\n  return state.forUsers.users;\n};\n\nexport const getPageSize = (state) => {\n  return state.forUsers.pageSize;\n};\n\nexport const getTotalUsersCount = (state) => {\n  return state.forUsers.totalUsersCount;\n};\n\nexport const getActionPage = (state) => {\n  return state.forUsers.actionPage;\n};\n\nexport const getFetching = (state) => {\n  return state.forUsers.isFetching;\n};\n\nexport const getFollowingProgressState = (state) => {\n  return state.forUsers.followingProgressState;\n};\n\nexport const getItemsForPaginator = (state) => {\n  return state.forUsers.itemsForPaginator;\n};\n\nexport const getComponentReadyToMountState = (state) => {\n  return state.forUsers.componentReadyToMount;\n};\n\nexport const getDefaultPage = (state) => {\n  return state.forUsers.defaultPage;\n};\n\nexport default usersReducer;\n","import React, { useState } from 'react';\nimport styles from '../../components/Users/Users.module.css';\n\nconst Paginator = (props) => {\n  console.log('Посмотри 87 лецию!');\n  const [\n    currentCount,\n    setCurrentCount,\n  ] = useState(0);\n\n  let rowsForMassive = Math.ceil(props.pagesCount / props.itemsForPaginator);\n\n  let tenPagesMassive = [];\n\n  let create2DArray = (rows) => {\n    let tmp = 1;\n\n    for (let i = 0; i < rows; i++) {\n      let tmpMassive = [];\n      for (let j = 0; j < 10; j++) {\n        if (tmp <= props.pagesCount) {\n          tmpMassive[j] = tmp;\n          tmp++;\n        }\n        tenPagesMassive[i] = tmpMassive;\n      }\n    }\n    return tenPagesMassive;\n  };\n\n  let currentPaginatorMassive = create2DArray(rowsForMassive);\n\n  let left = () => {\n    currentCount > 0 ? setCurrentCount(currentCount - 1) : setCurrentCount(0);\n  };\n\n  let right = () => {\n    currentCount < tenPagesMassive.length - 1\n      ? setCurrentCount(currentCount + 1)\n      : setCurrentCount(tenPagesMassive.length - 1);\n  };\n\n  return (\n    <div>\n      <div>\n        {props.pages.map((p) => {\n          return (\n            <span\n              className={props.requestedPage === p ? styles.selectedPage : ''}\n              onClick={(e) => {\n                props.onPageChanged(p);\n              }}\n              key={p}>\n              {p}\n            </span>\n          );\n        })}\n      </div>\n\n      <div>\n        <button onClick={left}>left</button>\n        {console.log(currentPaginatorMassive[currentCount])}\n        <button onClick={right}>right</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Paginator;\n","import React from 'react';\nimport styles from './UserItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst UserItem = (props) => {\n  let followUnfollow = () => {\n    props.followUnfollow(props.id, props.followed);\n  };\n\n  let followState = () => {\n    return (\n      <div>\n        <button disabled={props.followingProgressState.some((id) => id === props.id)} onClick={followUnfollow}>\n          {props.followed ? 'unFollow' : 'follow'}\n        </button>\n      </div>\n    );\n  };\n\n  let defaultStatus = () => {\n    return <div>Lorem ipsum dolor sit amet consectetur.</div>;\n  };\n\n  let hasImageSmall = () => {\n    return props.avatar === null ? props.defaultImage : props.avatar;\n  };\n\n  let haStatus = () => {\n    return props.status === null ? defaultStatus() : props.aboutMe;\n  };\n\n  return (\n    <div className={styles.userItem_global}>\n      <NavLink to={`/profile/${props.id}`}>\n        <div className={styles.userItem_avatar_image}>\n          <img src={hasImageSmall()} alt='{avatarSmall}' />\n        </div>\n      </NavLink>\n      <div className={styles.userItem_name_area}>{props.name}</div>\n      <div className={styles.userItem_status_area}>{haStatus()}</div>\n      <div className={styles.userItem_followButton_area}>{followState()}</div>\n    </div>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\nimport Paginator from '../../assets/Paginator/Paginator';\nimport UserItem from './UserItem/UserItem';\nimport styles from './Users.module.css';\n\nconst Users = (props) => {\n  console.log('users!!!');\n  console.log(props);\n  let user = props.users.map((user) => {\n    return (\n      <UserItem\n        id={user.id}\n        avatar={user.photos.small}\n        followed={user.followed}\n        name={user.name}\n        status={user.status}\n        defaultImage={props.defaultImage}\n        followingProgressState={props.followingProgressState}\n        key={user.id}\n        followUnfollow={props.followUnfollow}\n      />\n    );\n  });\n\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages[i - 1] = i;\n  }\n\n  return (\n    <div>\n      <Paginator\n        totalUsersCount={props.totalUsersCount}\n        pageSize={props.pageSize}\n        pages={pages}\n        onPageChanged={props.onPageChanged}\n        requestedPage={props.requestedPage}\n      />\n      <div className={styles.users_global}>\n        <div>{user}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport styles from './Preloader.module.css';\n\nconst Preloader = () => {\n  return (\n    <div>\n      <div className={styles.lds_hourglass} />\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  followingProgress,\n  /* requestUsers, */\n  requestUsersPage,\n  followUnfollow,\n  getPageSize,\n  getUsersOnPage,\n  getTotalUsersCount,\n  getActionPage,\n  getFetching,\n  getFollowingProgressState,\n  getItemsForPaginator,\n  getComponentReadyToMountState,\n  readyToMount,\n} from '../../redux/Users-Reducer';\nimport defaultImage from './../../assets/defaultImage.jpg';\nimport Users from './Users';\nimport Preloader from '../../assets/loaders/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { isThrowStatement } from 'typescript';\n\nclass UsersAPIComponent extends React.Component {\n  // конструктор закоменчен, только потому что его не обязательно писать, т.к.\n  // единственное его предназначение передавать пропсы в родительский класс\n\n  /* constructor (props) {\n    super(props);\n  } */\n\n  componentDidMount () {\n    let requestedPage = this.props.requestedPage;\n    let pageSize = this.props.pageSize;\n    this.props.readyToMount(requestedPage, pageSize);\n  }\n\n  onPageChanged = (pageNumber) => {\n    let pageSize = this.props.pageSize;\n    this.props.requestUsersPage(pageNumber, pageSize);\n  };\n\n  render () {\n    const UsersCaller = () => {\n      return (\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          users={this.props.users}\n          defaultImage={defaultImage}\n          requestedPage={this.props.requestedPage}\n          onPageChanged={this.onPageChanged}\n          followingProgressState={this.props.followingProgressState}\n          followUnfollow={this.props.followUnfollow}\n        />\n      );\n    };\n    return <Fragment>{this.props.isFetching ? <Preloader /> : <UsersCaller />}</Fragment>;\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    users                  : getUsersOnPage(state),\n    pageSize               : getPageSize(state),\n    totalUsersCount        : getTotalUsersCount(state),\n    requestedPage          : getActionPage(state),\n    isFetching             : getFetching(state),\n    followingProgressState : getFollowingProgressState(state),\n    itemsForPaginator      : getItemsForPaginator(state),\n    componentReadyToMount  : getComponentReadyToMountState(state),\n  };\n};\n\n/* let mapDispatchToProps = (dispatch) => {\n  return {\n    followButton: (id) => {\n      dispatch(followButtonAC(id));\n    },\n  };\n}; */\n\n/* let mapDispatchToProps = {\n  followButton: followButtonAC,\n}; */\n\nlet mapDispatchToProps = {\n  followingProgress,\n  /* requestUsers, */\n  requestUsersPage,\n  followUnfollow,\n  readyToMount,\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(UsersAPIComponent);\n","import React, { useEffect, useState } from 'react';\n\nconst ProfileStatusWithHoocs = React.memo((props) => {\n  let [\n    editMode,\n    setEditMode,\n  ] = useState(false);\n\n  let [\n    localStatus,\n    setLocalStatus,\n  ] = useState(props.status);\n\n  useEffect(\n    () => {\n      setLocalStatus(props.status);\n    },\n    [\n      props.status,\n    ]\n  );\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateUserStatus(localStatus);\n  };\n\n  const onStateUpdate = (element) => {\n    let text = element.target.value;\n    setLocalStatus(text);\n  };\n\n  const editTrue = () => {\n    return (\n      <div>\n        <input\n          onChange={onStateUpdate}\n          autoFocus={true}\n          onBlur={deactivateEditMode}\n          value={localStatus ? localStatus : props.status}\n          type='text'\n        />\n      </div>\n    );\n  };\n\n  const editFalse = () => {\n    return (\n      <div>\n        <span onDoubleClick={activateEditMode}>{localStatus}</span>\n      </div>\n    );\n  };\n\n  const changeStatus = () => {\n    return editMode ? editTrue() : editFalse();\n  };\n\n  return <div>{changeStatus()}</div>;\n});\n\nexport default ProfileStatusWithHoocs;\n","import React from 'react';\n\nclass ProfileStatusComponent extends React.Component {\n  state = {\n    editMode    : false,\n    localStatus : this.props.status,\n  };\n\n  activateEditeMode = () => {\n    this.setState({ editMode: true });\n  };\n\n  deactivateMode = () => {\n    this.setState({ editMode: false });\n    this.props.updateUserStatus(this.state.localStatus);\n  };\n\n  onStateUpdate = (element) => {\n    let text = element.target.value;\n    this.setState({ localStatus: text });\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevProps.status !== this.props.status) {\n      this.setState({ localStatus: this.props.status });\n    }\n  };\n\n  render () {\n    const editTrue = () => {\n      return (\n        <div>\n          <input\n            onChange={this.onStateUpdate}\n            autoFocus={true}\n            onBlur={this.deactivateMode}\n            value={this.state.localStatus ? this.state.localStatus : this.props.status}\n            type='text'\n          />\n        </div>\n      );\n    };\n\n    const editFalse = () => {\n      return (\n        <div>\n          <span onDoubleClick={this.activateEditeMode}>{this.state.localStatus}</span>\n        </div>\n      );\n    };\n\n    const changeStatus = () => {\n      return this.state.editMode ? editTrue() : editFalse();\n    };\n\n    return <div>{changeStatus()}</div>;\n  }\n}\n\nexport default ProfileStatusComponent;\n","import React, { Fragment } from 'react';\nimport styles from './ProfileInfo.module.css';\nimport Preloader from '../../../assets/loaders/Preloader/Preloader';\nimport ProfileStatusComponent from './ProfileStatusComponent';\nimport ProfileStatusWithHoocs from './ProfileStatusWithHoocs';\n\nconst ProfileInfo = (props) => {\n  if (!props.userData) {\n    return <Preloader />;\n  }\n\n  const hasPhotoSmall = () => {\n    return props.userData.photos.small ? props.userData.photos.small : props.defaultImage;\n  };\n\n  const facebook = () => {\n    if (!props.userData.contacts.facebook) {\n      return <div />;\n    }\n    return <div>facebook: {props.userData.contacts.facebook}</div>;\n  };\n  const website = () => {\n    if (!props.userData.contacts.website) {\n      return <div />;\n    }\n    return <div>website: {props.userData.contacts.website}</div>;\n  };\n  const vk = () => {\n    if (!props.userData.contacts.vk) {\n      return <div />;\n    }\n    return <div>vk: {props.userData.contacts.vk}</div>;\n  };\n  const twitter = () => {\n    if (!props.userData.contacts.twitter) {\n      return <div />;\n    }\n    return <div>twitter: {props.userData.contacts.twitter}</div>;\n  };\n  const instagram = () => {\n    if (!props.userData.contacts.instagram) {\n      return <div />;\n    }\n    return <div>instagram: {props.userData.contacts.instagram}</div>;\n  };\n  const youtube = () => {\n    if (!props.userData.contacts.youtube) {\n      return <div />;\n    }\n    return <div>youtube: {props.userData.contacts.youtube}</div>;\n  };\n  const github = () => {\n    if (!props.userData.contacts.github) {\n      return <div />;\n    }\n    return <div>github: {props.userData.contacts.github}</div>;\n  };\n  const mainLink = () => {\n    if (!props.userData.contacts.mainLink) {\n      return <div />;\n    }\n    return <div>mainLink: {props.userData.contacts.mainLink}</div>;\n  };\n\n  let profileStatus = () => {\n    return props.status ? (\n      <ProfileStatusWithHoocs status={props.status} updateUserStatus={props.updateUserStatus} />\n    ) : (\n      <ProfileStatusWithHoocs status={props.defaultStatus} updateUserStatus={props.updateUserStatus} />\n    );\n    //return <ProfileStatusComponent status={props.status} updateUserStatus={props.updateUserStatus} />;\n  };\n\n  return (\n    <Fragment>\n      <Fragment>\n        {/* <img\n          src='https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg'\n          alt='test'\n        /> */}\n      </Fragment>\n      <Fragment>\n        <div className={styles.avatar}>\n          <img src={hasPhotoSmall()} alt='avatar' />\n        </div>\n        <div>{props.userData.fullName}</div>\n        <div>{props.userData.aboutMe}</div>\n        <div>{profileStatus()}</div>\n        <div>------------------</div>\n        <div>Контакты</div>\n        <div>{facebook()}</div>\n        <div>{website()}</div>\n        <div>{vk()}</div>\n        <div>{twitter()}</div>\n        <div>{instagram()}</div>\n        <div>{youtube()}</div>\n        <div>{github()}</div>\n        <div>{mainLink()}</div>\n      </Fragment>\n    </Fragment>\n  );\n};\n\nexport default ProfileInfo;\n\n/* <ProfileStatusComponent status={props.status} updateUserStatus={props.updateUserStatus} /> */\n/* <ProfileStatusComponent status={props.defaultStatus} updateUserStatus={props.updateUserStatus} /> */\n","import React from 'react';\nimport styles from './Post.module.css';\n\nconst Post = (props) => {\n  const likeButtonCounter = () => {\n    return props.likeButtonCounter(props.id);\n  };\n\n  const likeButtonState = () => {\n    if (!props.liked) {\n      return (\n        <span>\n          <button onClick={likeButtonCounter}>push to like</button>\n        </span>\n      );\n    } else {\n      return (\n        <span>\n          <button onClick={likeButtonCounter}>push to unLike</button>\n        </span>\n      );\n    }\n  };\n\n  return (\n    <div className={styles.post_global}>\n      <div className={styles.post_avatar_image}>\n        <img\n          src='https://store.playstation.com/store/api/chihiro/00_09_000/container/RU/ru/999/EP0149-CUSA09988_00-AV00000000000002/1553528383000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000'\n          alt='post avatar'\n        />\n        <div className={styles.post_sugar}>\n          <div>\n            {props.message} (Likes {props.likeCount})\n          </div>\n          {likeButtonState()}\n          <p />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport styles from './MyPostsForm.module.css';\nimport { Field } from 'redux-form';\nimport { required, maxLengthCreator, minLengthCreator } from './../../../../utils/validators/Validators';\nimport { SingleTextArea } from '../../../../assets/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\nconst minLength1 = minLengthCreator(1);\n\nconst MyPostsForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name={'postField'}\n          validate={[\n            required,\n            maxLength10,\n            minLength1,\n          ]}\n          label={'postField'}\n          component={SingleTextArea}\n        />\n      </div>\n      <div>\n        <button>add post</button>\n      </div>\n    </form>\n  );\n};\n\nexport default MyPostsForm;\n","import React from 'react';\nimport styles from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { reduxForm } from 'redux-form';\nimport MyPostsForm from './MyPostsForm/MyPostsForm';\n\nlet MyPostsFormRedux = reduxForm({ form: 'myPostsForm' })(MyPostsForm);\nclass MyPosts extends React.Component {\n  // конструктор закоменчен, только потому что его не обязательно писать, т.к.\n  // единственное его предназначение передавать пропсы в родительский класс\n  /* constructor (props) {\n    super(props);\n  } */\n\n  postData = this.props.postData;\n\n  addPost = (values) => {\n    this.props.addPost(values.postField);\n  };\n\n  render () {\n    const PostMap = this.postData.map((post) => {\n      return (\n        <Post\n          id={post.id}\n          message={post.message}\n          liked={post.liked}\n          likeCount={post.likeCount}\n          likeButtonCounter={this.props.likeButtonCounter}\n          key={post.id}\n        />\n      );\n    });\n    return (\n      <div>\n        <div>\n          <div>MyPosts component below</div>\n          <div>----------</div>\n          <div>\n            <h2>My Post</h2>\n          </div>\n        </div>\n        <div className={styles.text_area}>\n          <MyPostsFormRedux onSubmit={this.addPost} />\n        </div>\n        <div className={styles.posts}>{PostMap}</div>\n      </div>\n    );\n  }\n}\n\nexport default MyPosts;\n","const ADD_POST = 'ADD-POST';\nconst LIKE_BUTTON_COUNTER = 'LIKE-BUTTON-COUNTER';\nconst DELETE_POST = 'DELETE-POST';\n\nlet initialState = {\n  postData: [\n    { id: 1, message: 'BEEP', likeCount: 15, liked: false },\n    { id: 2, message: 'BOOP', likeCount: 20, liked: false },\n    { id: 3, message: 'BOOP', likeCount: 20, liked: false },\n    { id: 4, message: 'I', likeCount: 20, liked: false },\n    { id: 5, message: 'AM', likeCount: 20, liked: false },\n    { id: 6, message: 'A', likeCount: 20, liked: false },\n    { id: 7, message: 'ROBOT', likeCount: 20, liked: false },\n  ],\n};\n\nconst postReducer = (state = initialState, action) => {\n  /* let stateCopy = { ...state };\n  stateCopy.postData = [\n    ...state.postData,\n  ]; */\n\n  let stateCopy = state;\n\n  const _addPost = (postMessage) => {\n    stateCopy = {\n      ...state,\n      postData: [\n        ...state.postData,\n      ],\n    };\n\n    let last = stateCopy.postData.length - 1;\n\n    const newId = stateCopy.postData[last].id + 1;\n    let newPost = {\n      id: newId,\n      message: postMessage,\n      likeCount: 0,\n      liked: false,\n    };\n\n    stateCopy.postData.push(newPost);\n  };\n\n  const _likeButtonCounter = (id) => {\n    stateCopy = {\n      ...state,\n      postData: [\n        ...state.postData,\n      ],\n    };\n\n    if (!stateCopy.postData[id - 1].liked)\n    {\n      stateCopy.postData[id - 1].likeCount += 1;\n      stateCopy.postData[id - 1].liked = true;\n    } else\n    {\n      stateCopy.postData[id - 1].likeCount -= 1;\n      stateCopy.postData[id - 1].liked = false;\n    }\n  };\n\n  const _deletePost = (postId) => {\n    stateCopy = {\n      ...state,\n      postData: [\n        ...stateCopy.postData.filter(p => p.id !== postId)\n      ],\n    }\n  }\n\n  if (action.type === ADD_POST)\n  {\n    _addPost(action.postMessage);\n  } else if (action.type === LIKE_BUTTON_COUNTER)\n  {\n    _likeButtonCounter(action.id);\n  } else if (action.type === DELETE_POST)\n  {\n    _deletePost(action.postId);\n  }\n  return stateCopy;\n};\n\n/* Action creators */\n\nexport const addPost = (postMessage) => {\n  return {\n    type: ADD_POST,\n    postMessage: postMessage,\n  };\n};\n\nexport const likeButtonCounter = (id) => {\n  return {\n    type: LIKE_BUTTON_COUNTER,\n    id: id,\n  };\n};\n\nexport const deletePost = (postId) => {\n  return {\n    type: DELETE_POST,\n    postId: postId,\n  }\n}\n\n/* Getters */\n\nexport const getPostData = (state) => {\n  return state.forPosts.postData;\n};\n\nexport default postReducer;\n","import MyPosts from './MyPosts';\nimport { addPost, likeButtonCounter, getPostData } from '../../../redux/Post-Reducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    postData : getPostData(state),\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost           : (postMessage) => {\n      dispatch(addPost(postMessage));\n    },\n    likeButtonCounter : (id) => {\n      dispatch(likeButtonCounter(id));\n    },\n  };\n};\n\n/* let mapDispatchToProps = {\n  addPost,\n  likeButtonCounter,\n}; */\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(MyPosts);\n\n//export default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n","import React, { Fragment } from 'react';\n//import styles from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n  console.log(props);\n\n  window.props = [];\n  window.props.push(props);\n  return (\n    <Fragment>\n      <ProfileInfo\n        userData={props.userData}\n        defaultImage={props.defaultImage}\n        status={props.status}\n        updateUserStatus={props.updateUserStatus}\n        defaultStatus={props.defaultStatus}\n      />\n      <div>\n        <div>MAIN CONTENT BELOW</div>\n        <div>------------------</div>\n      </div>\n      <Fragment>\n        <MyPostsContainer />\n      </Fragment>\n    </Fragment>\n  );\n};\nexport default Profile;\n","import { createSelector } from 'reselect';\nimport { profileAPI } from '../api/api';\n\nconst SET_COMMON_USER_PROFILE = 'SET-COMMON_USER_DATA';\nconst SET_IS_FETCHING = 'SET-IS-FETCHING';\nconst SET_USER_STATUS = 'SET-USER-STATUS';\nconst GET_ALL_USER_DATA_SUCCESS = 'GET-ALL-USER-DATA-SUCCESS';\n\nlet initState = {\n  userData         : {\n    aboutMe                   : null,\n    contacts                  : {\n      facebook  : null,\n      website   : null,\n      vk        : null,\n      twitter   : null,\n      instagram : null,\n      youtube   : null,\n      github    : null,\n      mainLink  : null,\n    },\n    lookingForAJob            : null,\n    lookingForAJobDescription : null,\n    fullName                  : null,\n    userId                    : null,\n    photos                    : {\n      small : null,\n      large : null,\n    },\n  },\n  isFetching       : false,\n  status           : 'initStateStatus',\n  allUserDataState : false,\n};\nconst profileReducer = (state = initState, action) => {\n  let stateCopy = state;\n\n  let _setCommonUserProfile = (userData) => {\n    stateCopy = {\n      ...state,\n      userData : userData,\n      contacts : { ...userData.contacts },\n      photos   : { ...userData.photos },\n    };\n  };\n\n  let _isFetching = (isFetching) => {\n    stateCopy = {\n      ...state,\n      isFetching : isFetching,\n    };\n  };\n\n  let _setUserStatus = (status) => {\n    stateCopy = {\n      ...state,\n      status : status,\n    };\n  };\n\n  let _getAllUserDataSuccess = (success) => {\n    stateCopy = {\n      ...state,\n      allUserDataState : success,\n    };\n  };\n\n  if (action.type === SET_COMMON_USER_PROFILE) {\n    _setCommonUserProfile(action.userProfile);\n  } else if (action.type === SET_IS_FETCHING) {\n    _isFetching(action.isFetching);\n  } else if (action.type === SET_USER_STATUS) {\n    _setUserStatus(action.status);\n  } else if (action.type === GET_ALL_USER_DATA_SUCCESS) {\n    _getAllUserDataSuccess(true);\n  }\n\n  return stateCopy;\n};\n\n/* Action creators */\n\nexport const setCommonUserProfile = (userProfile) => {\n  return {\n    type        : SET_COMMON_USER_PROFILE,\n    userProfile : userProfile,\n  };\n};\n\nexport const setIsFetching = (isFetching) => {\n  return {\n    type       : SET_IS_FETCHING,\n    isFetching : isFetching,\n  };\n};\n\nexport const setUserStatus = (status) => {\n  return {\n    type   : SET_USER_STATUS,\n    status : status,\n  };\n};\n\nexport const getAllUserDataSuccess = () => {\n  return {\n    type : GET_ALL_USER_DATA_SUCCESS,\n  };\n};\n\n/* Thunk creators */\n\nconst getUserProfile = (userId) => {\n  return (dispatch) => {\n    dispatch(setIsFetching(true));\n\n    return profileAPI.getUserProfile(userId).then((data) => {\n      dispatch(setIsFetching(false));\n      dispatch(setCommonUserProfile(data));\n    });\n  };\n};\n\nconst getUserStatus = (userId) => {\n  return (dispatch) => {\n    dispatch(setIsFetching(true));\n\n    return profileAPI.getUserStatus(userId).then((response) => {\n      dispatch(setIsFetching(false));\n      dispatch(setUserStatus(response));\n    });\n  };\n};\n\nexport const getAllUserData = (userId) => (dispatch) => {\n  let userProfile = dispatch(getUserProfile(userId));\n  let userStatus = dispatch(getUserStatus(userId));\n  Promise.all([\n    userProfile,\n    userStatus,\n  ]).then(() => {\n    dispatch(getAllUserDataSuccess());\n  });\n};\n\nexport const updateUserStatus = (status) => async (dispatch) => {\n  dispatch(setIsFetching(true));\n  let response = await profileAPI.updateStatus(status);\n  if (response.data.resultCode === 0) {\n    dispatch(setIsFetching(false));\n    dispatch(setUserStatus(status));\n  }\n};\n\n/* Getters */\n\nconst _getUserData = (state) => {\n  return state.forProfile.userData;\n};\n\nconst _getStatus = (state) => {\n  return state.forProfile.status;\n};\n\nconst _getIsFetching = (state) => {\n  return state.forProfile.isFetching;\n};\n\nconst _getAllUserDataState = (state) => {\n  return state.forProfile.allUserDataState;\n};\n\nexport const getUserData = createSelector(_getUserData, (data) => data);\nexport const getStatus = createSelector(_getStatus, (status) => status);\nexport const getIsFetching = createSelector(_getIsFetching, (fetching) => fetching);\nexport const getAllUserDataState = createSelector(_getAllUserDataState, (state) => state);\n\nexport default profileReducer;\n","import React, { Fragment } from \"react\";\nimport Profile from \"./Profile\";\nimport {\n  setCommonUserProfile,\n  setIsFetching,\n  getAllUserData,\n  updateUserStatus,\n  getUserData,\n  getIsFetching,\n  getAllUserDataState,\n  getStatus,\n} from \"../../redux/Profile-Reducer\";\nimport { getPostData } from \"../../redux/Post-Reducer\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Preloader from \"../../assets/loaders/Preloader/Preloader\";\nimport defaultImage from \"./../../assets/defaultImage.jpg\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\nimport { getAuth, getAuthId } from \"../../redux/Auth-Reducer\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getAllUserData(userId);\n  }\n\n  defaultStatus = \"defaultStatus\";\n\n  render() {\n    if (!this.props.allUserDataState) {\n      return <Preloader />;\n    }\n\n    let ProfileCaller = () => {\n      return (\n        <Profile\n          {...this.props}\n          defaultImage={defaultImage}\n          defaultStatus={this.defaultStatus}\n        />\n      );\n    };\n    return (\n      <div>\n        <Fragment>\n          {this.props.isFetching ? <Preloader /> : <ProfileCaller />}\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    userData: getUserData(state),\n    isFetching: getIsFetching(state),\n    postData: getPostData(state),\n    authorizedUserId: getAuthId(state),\n    isAuth: getAuth(state),\n    allUserDataState: getAllUserDataState(state),\n    status: getStatus(state),\n  };\n};\n\n/* let mapDispatchToProps = (dispatch) => {\n  return {\n    setCommonUserProfile: (userData) => {\n      dispatch(setCommonUserProfileAC(userData));\n    },\n  };\n}; */\n\nlet mapDispatchToProps = {\n  setCommonUserProfile,\n  setIsFetching,\n  getAllUserData,\n  updateUserStatus,\n  getStatus,\n};\n\nlet profileContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter\n)(ProfileContainer);\n\nexport default profileContainer;\n","import React from 'react';\nimport styles from './Header.module.css';\nimport { NavLink, Redirect } from 'react-router-dom';\n\nconst Header = (props) => {\n  const login = () => {\n    return (\n      <div>\n        <div>\n          <NavLink to={`/profile/${props.userId}`}>{props.login}</NavLink> -{' '}\n          <button onClick={props.authLogoutUser}>logout</button>\n        </div>\n      </div>\n    );\n  };\n  let userAuth = () => {\n    return props.isAuth ? login() : <NavLink to={'/login'}>Login</NavLink>;\n  };\n\n  return (\n    <header className={styles.header}>\n      <div className={styles.login_block}>\n        <img\n          src='https://www.freeflashlogos.com/wp-content/uploads/2019/05/logomaker-landing-page.jpg'\n          alt='site logo'\n        />\n        <div>{userAuth()}</div>\n        <div>\n          <img src={props.authUserImage} alt='avatar' />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { authAPI, profileAPI } from '../api/api';\nimport defaultImage from '../assets/defaultImage.jpg';\nimport { setAuthUserData, setIsFetching, setAuthUserImage } from '../redux/Auth-Reducer';\n\nconst initState = {};\n\nconst headerReducer = (state = initState, action) => {\n  let stateCopy = state;\n\n  return stateCopy;\n};\n\nexport const getHeader = () => async (dispatch) => {\n  dispatch(setIsFetching(true));\n  let response = await authAPI.getAuthMe();\n  if (response.resultCode === 0) {\n    dispatch(setIsFetching(false));\n    let { id, login, email } = response.data;\n    dispatch(setAuthUserData(id, login, email, true));\n  }\n  let response1 = await profileAPI.getUserProfile(response.data.id);\n  !response1.photos.small\n    ? dispatch(setAuthUserImage(defaultImage))\n    : dispatch(setAuthUserImage(response1.photos.small));\n};\n\nexport default headerReducer;\n","import React, { Fragment } from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport {\n  setAuthUserData,\n  setIsFetching,\n  setAuthUserImage,\n  authLogoutUser,\n  getAuth,\n  getAuthLogin,\n  getAuthId,\n  getAuthUserImage,\n} from '../../redux/Auth-Reducer';\nimport Preloader from '../../assets/loaders/Preloader/Preloader';\nimport { getHeader } from '../../redux/Header-Reducer';\nimport { compose } from 'redux';\n\nclass HeaderContainer extends React.Component {\n  componentDidMount () {\n    this.props.getHeader();\n  }\n\n  render () {\n    const HeaderCaller = () => {\n      return <Header {...this.props} />;\n    };\n    return <Fragment>{this.props.isFetching ? <Preloader /> : <HeaderCaller />}</Fragment>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth        : getAuth(state),\n    login         : getAuthLogin(state),\n    userId        : getAuthId(state),\n    authUserImage : getAuthUserImage(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  setAuthUserData,\n  setIsFetching,\n  setAuthUserImage,\n  getHeader,\n  authLogoutUser,\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(HeaderContainer);\n\n//export default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\n","import { getAuthUserData } from './Auth-Reducer';\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS';\n\nlet initState = {\n  initialized: false,\n};\n\nconst appReducer = (state = initState, action) => {\n  let stateCopy = state;\n\n  const _setInitialized = (init) => {\n    stateCopy = {\n      ...state,\n      initialized: init,\n    };\n  };\n\n  if (action.type === INITIALIZED_SUCCESS)\n  {\n    _setInitialized(true);\n  }\n  return stateCopy;\n};\n\nexport const initializedSuccess = () => {\n  return {\n    type: INITIALIZED_SUCCESS,\n  };\n};\n\nexport const initializeApp = () => (dispatch) => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([\n    promise,\n  ]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\n\nexport default appReducer;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport postReducer from './Post-Reducer';\nimport messageReducer from './Message-Reducer';\nimport navBarReducer from './NavBar-Reducer';\nimport usersReducer from './Users-Reducer';\nimport profileReducer from './Profile-Reducer';\nimport authReducer from './Auth-Reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport headerReducer from './Header-Reducer';\nimport appReducer from './App-Reducer';\n\nlet reducers = combineReducers({\n  forPosts   : postReducer,\n  form       : formReducer,\n  forUsers   : usersReducer,\n  forAuth    : authReducer,\n  forProfile : profileReducer,\n  forNavbar  : navBarReducer,\n  forDialogs : messageReducer,\n  forHeder   : headerReducer,\n  forApp     : appReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\nwindow.store = store;\n\nexport default store;\n","import React from 'react';\nimport './App.css';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport Login from './components/Login/Login';\nimport { Route, withRouter } from 'react-router-dom';\nimport Friends from './components/Friends/Friends';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport NavbarContainer from './components/Navbar/NavbarContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { connect } from 'react-redux';\nimport { initializeApp } from './redux/App-Reducer';\nimport { compose } from 'redux';\nimport Preloader from './assets/loaders/Preloader/Preloader';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nclass App extends React.Component {\n  componentDidMount () {\n    this.props.initializeApp();\n  }\n  render () {\n    const DialogsCaller = () => {\n      return <DialogsContainer />;\n    };\n\n    const ProfileCaller = () => {\n      return <ProfileContainer />;\n    };\n\n    const NavbarCaller = () => {\n      return <NavbarContainer />;\n    };\n\n    const HeaderCaller = () => {\n      return <HeaderContainer />;\n    };\n\n    const UsersCaller = () => {\n      return <UsersContainer />;\n    };\n\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n    return (\n      <div className='app_wrapper'>\n        <div className='app_wrapper_header'>\n          <HeaderCaller />\n        </div>\n        <div className='app_wrapper_navbar'>\n          <NavbarCaller />\n        </div>\n        <div className='app_wrapper_content'>\n          <Route path='/profile/:userId?' component={ProfileCaller} />\n          <div className='app_wrapper_dialogs'>\n            <Route exact path='/messages' component={DialogsCaller} />\n          </div>\n          <Route path='/news' component={News} />\n          <Route path='/music' component={Music} />\n          <Route path='/settings' component={Settings} />\n          <Route path='/friends' component={Friends} />\n          <Route path='/users' component={UsersCaller} />\n          <Route path='/login' component={Login} />\n        </div>\n      </div>\n    );\n  }\n}\n\n/* const mdtp = {\n  getAuthUserData,\n}; */\n\n//export default connect(null, { getAuthUserData })(App);\n\nconst mapStateToProps = (state) => {\n  return {\n    initialized : state.forApp.initialized,\n  };\n};\n\n//export default compose(withRouter, connect(mapStateToProps, { initializeApp }))(App);\n\nconst AppContainer = compose(withRouter, connect(mapStateToProps, { initializeApp }))(App);\n\nconst MainApp = (props) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default MainApp;\n","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport MainApp from './App';\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/defaultImage.90a8ad77.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem_global\":\"UserItem_userItem_global__1nqXy\",\"userItem_avatar_image\":\"UserItem_userItem_avatar_image__2iOHv\",\"userItem_status_area\":\"UserItem_userItem_status_area__f52u5\",\"userItem_name_area\":\"UserItem_userItem_name_area__1hKCk\",\"userItem_followButton_area\":\"UserItem_userItem_followButton_area__3-Ltm\",\"userItem_location_area\":\"UserItem_userItem_location_area__1w_OO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__pO6CB\",\"error\":\"FormsControls_error__14arB\",\"formSummaty\":\"FormsControls_formSummaty__2_-SV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_global\":\"Users_users_global__19FZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_main\":\"Dialogs_dialogs_main__3t8Gb\",\"dialogs_items\":\"Dialogs_dialogs_items__16PrC\",\"dialogs_messages\":\"Dialogs_dialogs_messages__2Hhjc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_global\":\"Post_post_global__3LmNt\",\"post_avatar_image\":\"Post_post_avatar_image__1wQIv\",\"post_sugar\":\"Post_post_sugar__tBBvq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"dialog_avatar_image\":\"DialogItem_dialog_avatar_image__1K85G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"text_area\":\"MyPosts_text_area__N9Pu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"login_block\":\"Header_login_block__3dzPh\"};"],"sourceRoot":""}